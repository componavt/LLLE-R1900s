import os
from pathlib import Path
from typing import Tuple, Optional
import re
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∏–∑ .env
CSV_IN_DIR = os.getenv("CSV_IN_DIR", "data/csv_in")
PARQUET_PATH = os.getenv("PARQUET_PATH", "data/data.parquet")
OUTPUTS_DIR = os.getenv("OUTPUTS_DIR", "outputs")


def parse_filename(filename: str) -> Optional[Tuple[str, str, str]]:
    """
    –ü–∞—Ä—Å–∏—Ç –∏–º—è —Ñ–∞–π–ª–∞ –≤–∏–¥–∞:
        "–ì–û–î –ü–û–°–ï–õ–ï–ù–ò–ï –ú–µ—Å—è—Ü1-–ú–µ—Å—è—Ü2.csv"
        "–ì–û–î –ü–û–°–ï–õ–ï–ù–ò–ï –ú–µ—Å—è—Ü1.csv"

    –ü—Ä–∏–º–µ—Ä—ã:
        '1916 –ò–≤–∏–Ω—Å–∫–æ–≥–æ 01-03.csv' ‚Üí ('1916', '–ò–≤–∏–Ω—Å–∫–æ–≥–æ', '01-03')
        '1916 –ö—É–∑–∞—Ä–∞–Ω–¥—Å–∫–æ–≥–æ 02.csv' ‚Üí ('1916', '–ö—É–∑–∞—Ä–∞–Ω–¥—Å–∫–æ–≥–æ', '02')

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (–≥–æ–¥, –ø–æ—Å–µ–ª–µ–Ω–∏–µ, –ø–µ—Ä–∏–æ–¥) –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å.
    """
    # –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .csv
    if not filename.endswith(".csv"):
        return None

    stem = filename[:-4]  # —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞: ".csv"

    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: –≥–æ–¥ (4 —Ü–∏—Ñ—Ä—ã), –∑–∞—Ç–µ–º –ø—Ä–æ–±–µ–ª, –∑–∞—Ç–µ–º –≤—Å—ë –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–±–µ–ª–∞ ‚Äî –ø–æ—Å–µ–ª–µ–Ω–∏–µ,
    # –∑–∞—Ç–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç ‚Äî –ø–µ—Ä–∏–æ–¥ (–º–µ—Å—è—Ü—ã)
    pattern = r"^(\d{4})\s+(.+)\s+(\d{1,2}(?:-\d{1,2})?)$"
    match = re.match(pattern, stem)

    if not match:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞: {filename}")
        return None

    year, settlement, period = match.groups()

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ–¥–∞
    if not (1900 <= int(year) <= 1999):
        print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ –≤ —Ñ–∞–π–ª–µ: {filename}")
        return None

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–∏–æ–¥–∞
    if "-" in period:
        start, end = period.split("-")
        if not (1 <= int(start) <= 12) or not (1 <= int(end) <= 12):
            print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ —Ñ–∞–π–ª–µ: {filename}")
            return None
    else:
        if not (1 <= int(period) <= 12):
            print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–µ—Å—è—Ü –≤ —Ñ–∞–π–ª–µ: {filename}")
            return None

    return year, settlement, period


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –æ–±—Ö–æ–¥–∏—Ç –≤—Å–µ CSV-—Ñ–∞–π–ª—ã –≤ CSV_IN_DIR –∏ –ø–∞—Ä—Å–∏—Ç –∏—Ö –∏–º–µ–Ω–∞.
    """
    csv_dir = Path(CSV_IN_DIR)

    if not csv_dir.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {CSV_IN_DIR} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return

    print(f"üìÇ –°–∫–∞–Ω–∏—Ä—É—é –ø–∞–ø–∫—É: {csv_dir.absolute()}")

    for csv_file in csv_dir.rglob("*.csv"):
        rel_path = csv_file.relative_to(csv_dir)
        result = parse_filename(csv_file.name)

        if result:
            year, settlement, period = result
            print(f"‚úÖ {rel_path} ‚Üí –ì–æ–¥: {year}, –ü–æ—Å–µ–ª–µ–Ω–∏–µ: {settlement}, –ü–µ—Ä–∏–æ–¥: {period}")
        else:
            print(f"‚ùå –ü—Ä–æ–ø—É—Å–∫: {rel_path}")


if __name__ == "__main__":
    main()
